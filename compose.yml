services:
  db:
    image: postgis/postgis:17-3.5-alpine
    container_name: db_cms
    platform: linux/amd64
    volumes:
      - ./data/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--host=localhost",
          "--username=${POSTGRES_USER}",
          "--dbname=${POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - backend

  cache:
    image: redis:6
    container_name: cache
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  # Base directus service (not used directly)
  directus_base:
    image: ${DOCKER_USERNAME}/lmu-app-cms:${ENVIRONMENT}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_ENV: ${ENVIRONMENT:-development}
        BUILD_DATE: ${BUILD_DATE:-local}
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
    environment:
      # Database Config
      DB_CLIENT: "pg"
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}

      # Directus Config
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL}

      # SMTP Config
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_TRANSPORT: ${EMAIL_TRANSPORT}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_SECURE: ${EMAIL_SMTP_SECURE}
      EMAIL_SMTP_IGNORE_TLS: ${EMAIL_SMTP_IGNORE_TLS}
      EMAIL_SMTP_NAME: ${EMAIL_SMTP_NAME}
      EMAIL_SMTP_POOL: ${EMAIL_SMTP_POOL}

      # could be nice in future
      WEBSOCKETS_ENABLED: "true"
      GRAPHQL_INTROSPECTION: "true"

      # Cache Config (using memory for simplicity)
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://cache:6379"

      # Set environment
      NODE_ENV: ${ENVIRONMENT:-development}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
      - frontend
      - shared

  # Development environment (used by default)
  directus_dev:
    extends: directus_base
    image: directus/directus:11.7.2
    container_name: directus_dev
    user: root
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
      - ./data/directus:/directus/data

  # Staging/Production environment (used when ENVIRONMENT=staging or ENVIRONMENT=production)
  directus:
    extends: directus_base
    profiles: ["staging", "production"]
    container_name: directus
    # No need to override image as it will use the built one from directus_base

networks:
  backend:
  frontend:
  shared:
    external: true
